name: Build and Deploy

on:
  push:
    branches:
      - main
    paths:
      - Paper-API-Patches/*
      - '*.gradle.kts'
      - gradle/**
      - gradle*
      - .gitmodules
      - work/**
      - .github/workflows/build_deploy.yml

jobs:
  build_deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: gradle/wrapper-validation-action@v1
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Configure Git
        run: |
          git config --global user.email "mastercoms@tuta.io"
          git config --global user.name "mastercoms"

      - name: Cache gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/jdks
            ~/.gradle/native
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', 'gradle.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Apply Patches
        run: ./gradlew applyApiPatches --no-daemon --stacktrace

      - name: Gradle Build and Deploy
        run: ./gradlew build publish --no-daemon --stacktrace
        env:
          ORG_GRADLE_PROJECT_glowstoneUsername: ${{ secrets.MAVEN_USERNAME }}
          ORG_GRADLE_PROJECT_glowstonePassword: ${{ secrets.MAVEN_PASSWORD }}

      - name: Get Minecraft version
        id: version
        run: |
          minecraft_version=$(./gradlew -q printMinecraftVersion | awk -F. '{print $1"."$2}')
          echo "minecraft_version=$minecraft_version" >> $GITHUB_OUTPUT

      - name: Cleanup Gradle Cache
        # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
        # Restoring these files from a GitHub Actions cache might cause problems for future builds.
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties

      - name: Push Javadocs to Pages
        uses: dmnemec/copy_file_to_another_repo_action@v1.1.1
        env:
          API_TOKEN_GITHUB: ${{ secrets.GH_TOKEN }}
        with:
          source_file: 'glowkit/build/docs/javadoc/.'
          destination_repo: 'GlowstoneMC/glowstonemc.github.io'
          destination_folder: content/jd/glowkit/${{ steps.version.outputs.minecraft_version }}/
          user_email: 'mastercoms@tuta.io'
          user_name: 'mastercoms'
          commit_message: Update Javadocs for Glowkit commit ${{ github.sha }}
