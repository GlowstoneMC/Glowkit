From cee6ecf77794bf5af5393aac7d844e9609faa748 Mon Sep 17 00:00:00 2001
From: Momo <momo@momoperes.ca>
Date: Mon, 27 Jun 2016 14:18:03 -0400
Subject: [PATCH] Fix Javadocs errors


diff --git a/src/main/java/co/aikar/timings/Timing.java b/src/main/java/co/aikar/timings/Timing.java
index d2b35f6..d5a6afa 100644
--- a/src/main/java/co/aikar/timings/Timing.java
+++ b/src/main/java/co/aikar/timings/Timing.java
@@ -29,6 +29,8 @@ package co.aikar.timings;
 public interface Timing extends AutoCloseable {
     /**
      * Starts timing the execution until {@link #stopTiming()} is called.
+     *
+     * @return the resultant Timing object
      */
     Timing startTiming();
 
@@ -43,6 +45,7 @@ public interface Timing extends AutoCloseable {
      * Starts timing the execution until {@link #stopTiming()} is called.
      *
      * But only if we are on the primary thread.
+     * @return the resultant Timing object
      */
     Timing startTimingIfSync();
 
diff --git a/src/main/java/co/aikar/timings/Timings.java b/src/main/java/co/aikar/timings/Timings.java
index 35544da..17d7da6 100644
--- a/src/main/java/co/aikar/timings/Timings.java
+++ b/src/main/java/co/aikar/timings/Timings.java
@@ -142,7 +142,7 @@ public final class Timings {
     }
 
     /**
-     * <p>Sets whether or not the Timings should monitor at Verbose level.<p/>
+     * <p>Sets whether or not the Timings should monitor at Verbose level.</p>
      * When Verbose is disabled, high-frequency timings will not be available.
      * Calling this will reset timing data.
      *
diff --git a/src/main/java/org/bukkit/command/SimpleCommandMap.java b/src/main/java/org/bukkit/command/SimpleCommandMap.java
index 4d57832..8becb80 100644
--- a/src/main/java/org/bukkit/command/SimpleCommandMap.java
+++ b/src/main/java/org/bukkit/command/SimpleCommandMap.java
@@ -221,7 +221,15 @@ public class SimpleCommandMap implements CommandMap {
 
     // Paper start - location tab-completes
     /**
-     * This code was copied, except for the noted change, from tabComplete(CommandSender sender, String cmdLine)
+     * Looks for the requested command and executes an appropriate
+     * tab-completer if found. This method will also tab-complete partial
+     * commands.
+     *
+     * @param sender The command's sender.
+     * @param cmdLine The entire command string to tab-complete, excluding
+     *     initial slash.
+     * @param location the location
+     * @return a list of possible tab-completions. This list may be immutable.
      */
     public List<String> tabComplete(CommandSender sender, String cmdLine, Location location) {
         Validate.notNull(sender, "Sender cannot be null");
diff --git a/src/main/java/org/bukkit/entity/Player.java b/src/main/java/org/bukkit/entity/Player.java
index 79e4a6d..209470c 100644
--- a/src/main/java/org/bukkit/entity/Player.java
+++ b/src/main/java/org/bukkit/entity/Player.java
@@ -258,7 +258,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
     /**
      * Plays an effect to just this player.
      *
-     * @param <T> the data based based on the type of the effect
+     * @param <T> the data based on the type of the effect
      * @param loc the location to play the effect at
      * @param effect the {@link Effect}
      * @param data a data bit needed for some effects
@@ -1254,6 +1254,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * Spawns the particle (the number of times specified by count)
      * at the target location.
      *
+     * @param <T> the data based on the type of the particle
      * @param particle the particle to spawn
      * @param location the location to spawn at
      * @param count the number of particles
@@ -1267,6 +1268,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * Spawns the particle (the number of times specified by count)
      * at the target location.
      *
+     * @param <T> the data based on the type of the particle
      * @param particle the particle to spawn
      * @param x the position on the x axis to spawn at
      * @param y the position on the y axis to spawn at
@@ -1315,6 +1317,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * randomized positively and negatively by the offset parameters
      * on each axis.
      *
+     * @param <T> the data based on the type of the particle
      * @param particle the particle to spawn
      * @param location the location to spawn at
      * @param count the number of particles
@@ -1332,6 +1335,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * randomized positively and negatively by the offset parameters
      * on each axis.
      *
+     * @param <T> the data based on the type of the particle
      * @param particle the particle to spawn
      * @param x the position on the x axis to spawn at
      * @param y the position on the y axis to spawn at
@@ -1387,6 +1391,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * randomized positively and negatively by the offset parameters
      * on each axis.
      *
+     * @param <T> the data based on the type of the particle
      * @param particle the particle to spawn
      * @param location the location to spawn at
      * @param count the number of particles
@@ -1406,6 +1411,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * randomized positively and negatively by the offset parameters
      * on each axis.
      *
+     * @param <T> the data based on the type of the particle
      * @param particle the particle to spawn
      * @param x the position on the x axis to spawn at
      * @param y the position on the y axis to spawn at
diff --git a/src/main/java/org/bukkit/event/player/PlayerItemConsumeEvent.java b/src/main/java/org/bukkit/event/player/PlayerItemConsumeEvent.java
index 42aad88..bae8112 100644
--- a/src/main/java/org/bukkit/event/player/PlayerItemConsumeEvent.java
+++ b/src/main/java/org/bukkit/event/player/PlayerItemConsumeEvent.java
@@ -60,6 +60,8 @@ public class PlayerItemConsumeEvent extends PlayerEvent implements Cancellable {
     /**
      * Return the custom item stack that will replace the consumed item, or null if no
      * custom replacement has been set (which means the default replacement will be used).
+     *
+     * @return the replacement
      */
     public ItemStack getReplacement() {
         return this.replacement;
@@ -68,6 +70,8 @@ public class PlayerItemConsumeEvent extends PlayerEvent implements Cancellable {
     /**
      * Set a custom item stack to replace the consumed item. Pass null to clear any custom
      * stack that has been set and use the default replacement.
+     *
+     * @param replacement the replacement
      */
     public void setReplacement(ItemStack replacement) {
         this.replacement = replacement;
diff --git a/src/main/java/org/bukkit/material/Dirt.java b/src/main/java/org/bukkit/material/Dirt.java
index b14447b..adcaca6 100644
--- a/src/main/java/org/bukkit/material/Dirt.java
+++ b/src/main/java/org/bukkit/material/Dirt.java
@@ -19,6 +19,8 @@ public class Dirt extends MaterialData {
 
     /**
      * @deprecated Magic value
+     *
+     * @param type the type
      */
     @Deprecated
     public Dirt(final int type) {
@@ -31,6 +33,9 @@ public class Dirt extends MaterialData {
 
     /**
      * @deprecated Magic value
+     *
+     * @param type the type
+     * @param data the data
      */
     @Deprecated
     public Dirt(final int type, final byte data) {
@@ -39,6 +44,9 @@ public class Dirt extends MaterialData {
 
     /**
      * @deprecated Magic value
+     *
+     * @param type the type
+     * @param data the data
      */
     @Deprecated
     public Dirt(final Material type, final byte data) {
diff --git a/src/main/java/org/bukkit/material/DoublePlant.java b/src/main/java/org/bukkit/material/DoublePlant.java
index 4898777..7c93512 100644
--- a/src/main/java/org/bukkit/material/DoublePlant.java
+++ b/src/main/java/org/bukkit/material/DoublePlant.java
@@ -19,6 +19,8 @@ public class DoublePlant extends MaterialData {
 
     /**
      * @deprecated Magic value
+     *
+     * @param type the type
      */
     @Deprecated
     public DoublePlant(final int type) {
@@ -31,6 +33,9 @@ public class DoublePlant extends MaterialData {
 
     /**
      * @deprecated Magic value
+     *
+     * @param type the type
+     * @param data the data
      */
     @Deprecated
     public DoublePlant(final int type, final byte data) {
@@ -39,6 +44,9 @@ public class DoublePlant extends MaterialData {
 
     /**
      * @deprecated Magic value
+     *
+     * @param type the type
+     * @param data the data
      */
     @Deprecated
     public DoublePlant(final Material type, final byte data) {
diff --git a/src/main/java/org/bukkit/material/Prismarine.java b/src/main/java/org/bukkit/material/Prismarine.java
index 8f49168..8aefef5 100644
--- a/src/main/java/org/bukkit/material/Prismarine.java
+++ b/src/main/java/org/bukkit/material/Prismarine.java
@@ -19,6 +19,8 @@ public class Prismarine extends MaterialData {
     /**
      *
      * @deprecated Magic value
+     *
+     * @param type the type
      */
     @Deprecated
     public Prismarine(final int type) {
@@ -32,6 +34,9 @@ public class Prismarine extends MaterialData {
     /**
      *
      * @deprecated Magic value
+     *
+     * @param type the type
+     * @param data the data
      */
     @Deprecated
     public Prismarine(final int type, final byte data) {
@@ -41,6 +46,9 @@ public class Prismarine extends MaterialData {
     /**
      *
      * @deprecated Magic value
+     *
+     * @param type the type
+     * @param data the data
      */
     @Deprecated
     public Prismarine(final Material type, final byte data) {
diff --git a/src/main/java/org/bukkit/material/Sand.java b/src/main/java/org/bukkit/material/Sand.java
index f7338a1..fe18b5a 100644
--- a/src/main/java/org/bukkit/material/Sand.java
+++ b/src/main/java/org/bukkit/material/Sand.java
@@ -19,6 +19,8 @@ public class Sand extends MaterialData {
     /**
      *
      * @deprecated Magic value
+     *
+     * @param type the type
      */
     @Deprecated
     public Sand(final int type) {
@@ -32,6 +34,9 @@ public class Sand extends MaterialData {
     /**
      *
      * @deprecated Magic value
+     *
+     * @param type the type
+     * @param data the data
      */
     @Deprecated
     public Sand(final int type, final byte data) {
@@ -41,6 +46,9 @@ public class Sand extends MaterialData {
     /**
      *
      * @deprecated Magic value
+     *
+     * @param type the type
+     * @param data the data
      */
     @Deprecated
     public Sand(final Material type, final byte data) {
diff --git a/src/main/java/org/bukkit/material/Sponge.java b/src/main/java/org/bukkit/material/Sponge.java
index 155ba63..63f0fe1 100644
--- a/src/main/java/org/bukkit/material/Sponge.java
+++ b/src/main/java/org/bukkit/material/Sponge.java
@@ -19,6 +19,8 @@ public class Sponge extends MaterialData {
     /**
      *
      * @deprecated Magic value
+     *
+     * @param type the type
      */
     @Deprecated
     public Sponge(final int type) {
@@ -32,6 +34,9 @@ public class Sponge extends MaterialData {
     /**
      *
      * @deprecated Magic value
+     *
+     * @param type the type
+     * @param data the data
      */
     @Deprecated
     public Sponge(final int type, final byte data) {
@@ -41,6 +46,9 @@ public class Sponge extends MaterialData {
     /**
      *
      * @deprecated Magic value
+     *
+     * @param type the type
+     * @param data the data
      */
     @Deprecated
     public Sponge(final Material type, final byte data) {
diff --git a/src/main/java/org/bukkit/material/Stone.java b/src/main/java/org/bukkit/material/Stone.java
index 78e1156..2ea20f1 100644
--- a/src/main/java/org/bukkit/material/Stone.java
+++ b/src/main/java/org/bukkit/material/Stone.java
@@ -19,6 +19,8 @@ public class Stone extends MaterialData {
 
     /**
      * @deprecated Magic value
+     *
+     * @param type the type
      */
     @Deprecated
     public Stone(final int type) {
@@ -31,6 +33,9 @@ public class Stone extends MaterialData {
 
     /**
      * @deprecated Magic value
+     *
+     * @param type the type
+     * @param data the data
      */
     @Deprecated
     public Stone(final int type, final byte data) {
@@ -39,6 +44,9 @@ public class Stone extends MaterialData {
 
     /**
      * @deprecated Magic value
+     *
+     * @param type the type
+     * @param data the data
      */
     @Deprecated
     public Stone(final Material type, final byte data) {
diff --git a/src/main/java/org/bukkit/potion/Potion.java b/src/main/java/org/bukkit/potion/Potion.java
index 28d24f6..4829399 100644
--- a/src/main/java/org/bukkit/potion/Potion.java
+++ b/src/main/java/org/bukkit/potion/Potion.java
@@ -35,6 +35,9 @@ public class Potion {
 
     /**
      * @deprecated In favour of {@link #Potion(PotionType, int)}
+     *
+     * @param type the type
+     * @param tier the potion tier
      */
     @Deprecated
     public Potion(PotionType type, Tier tier) {
@@ -44,6 +47,10 @@ public class Potion {
 
     /**
      * @deprecated In favour of {@link #Potion(PotionType, int, boolean)}
+     *
+     * @param type the type
+     * @param tier the potion tier
+     * @param splash whether the potion is a splash potion
      */
     @Deprecated
     public Potion(PotionType type, Tier tier, boolean splash) {
@@ -53,6 +60,11 @@ public class Potion {
     /**
      * @deprecated In favour of {@link #Potion(PotionType, int, boolean,
      *     boolean)}
+     *
+     * @param type the type
+     * @param tier the potion tier
+     * @param splash whether the potion is a splash potion
+     * @param extended whether the potion is extended
      */
     @Deprecated
     public Potion(PotionType type, Tier tier, boolean splash, boolean extended) {
@@ -106,6 +118,8 @@ public class Potion {
 
     /**
      * @deprecated
+     *
+     * @param name the name
      */
     @Deprecated
     public Potion(int name) {
diff --git a/src/main/java/org/bukkit/potion/PotionBrewer.java b/src/main/java/org/bukkit/potion/PotionBrewer.java
index 40f8d12..3af56e4 100644
--- a/src/main/java/org/bukkit/potion/PotionBrewer.java
+++ b/src/main/java/org/bukkit/potion/PotionBrewer.java
@@ -34,6 +34,8 @@ public interface PotionBrewer {
      * a potion with the given type.
      *
      * @param type The type of the potion
+     * @param upgraded whether the potion is upgraded
+     * @param extended whether the potion is extended
      * @return The list of effects
      */
     public Collection<PotionEffect> getEffects(PotionType type, boolean upgraded, boolean extended);
diff --git a/src/main/java/org/bukkit/potion/PotionType.java b/src/main/java/org/bukkit/potion/PotionType.java
index 60470b8..79ee347 100644
--- a/src/main/java/org/bukkit/potion/PotionType.java
+++ b/src/main/java/org/bukkit/potion/PotionType.java
@@ -67,6 +67,8 @@ public enum PotionType {
 
     /**
      * @deprecated Non-functional
+     *
+     * @return the damage value
      */
     @Deprecated
     public int getDamageValue() {
@@ -79,6 +81,9 @@ public enum PotionType {
 
     /**
      * @deprecated Non-functional
+     *
+     * @param damage the damage value
+     * @return the resultant PotionType
      */
     @Deprecated
     public static PotionType getByDamageValue(int damage) {
@@ -87,6 +92,9 @@ public enum PotionType {
 
     /**
      * @deprecated Misleading
+     *
+     * @param effectType the effect type
+     * @return the resultant PotionType
      */
     @Deprecated
     public static PotionType getByEffect(PotionEffectType effectType) {
-- 
2.9.2.windows.1

